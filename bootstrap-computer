#!/bin/bash
# A simple script to bootstrap a new computer machine-orama
# Rory Jacob - 12/April/2019

echo "
__  ___.                  __            __                        
_______  ___________ ___.__.   |__| \_ |__   ____   _____/  |_  _______/  |_____________  ______  
\_  __ \/  _ \_  __ <   |  |   |  |  | __ \ /  _ \ /  _ \   __\/  ___/\   __\_  __ \__  \ \____ \ 
|  | \(  <_> )  | \/\___  |   |  |  | \_\ (  <_> |  <_> )  |  \___ \  |  |  |  | \// __ \|  |_> >
|__|   \____/|__|   / ____/\__|  |  |___  /\____/ \____/|__| /____  > |__|  |__|  (____  /   __/ 
\/    \______|      \/                        \/                   \/|__|    
"

usage()
{
    echo "usage: bootstrap-computer --home ~/test/ --dotfiles

    --all               Install everything. The whole mishpacha
    --programs          Install programs
    --dotfiles          Install the dotfiles
    --home              The home directory to install the dot files (defaults to ~/) 
    "
}
validate_and_prompt() {

    local all=$1
    local dotfiles=$2
    local programs=$3
    local home=$4

    local output=""
    if [[ ${all} == true ]]; then
        output="Installing everything. Daaaaaaamn."
    else
        if [[ ${dotfiles} == true ]]; then
            output="Installing dotfiles to ${home}\n"
        fi

        if [[ ${programs} == true ]]; then
            output="${output}Installing programs"
        fi

        if [[ ${output} == "" ]]; then
            usage
            exit 1
        fi

    fi

    echo -e "${output}"

    echo "Are you sure? (y/N)"

    read continue

    if [[ ${continue} == "y" ]]; then
        return 1
    else
        exit 0
    fi
}

# parsing the cmd
install_directory=$HOME
install_everything=false
install_dotfiles=false
install_programs=false
while [[ "$1" != "" ]]; do
    case $1 in
        --all )
            install_everything=true
            ;;
        --dotfiles )
            install_dotfiles=true
            ;;
        --programs )
            install_programs=true
            ;;
        --home )    shift
            install_directory=$1
            ;;
        * )                     
            usage
            exit 1
    esac
    shift
done

validate_and_prompt $install_everything $install_dotfiles $install_programs $install_directory

echo "Let's get it started"

packages_to_install=('ripgrep' 'go' 'tldr' 'awscli' 'tmux' 'vim' 'python3' 'pandoc' 'coreutils')

if [[ "$OSTYPE" == "darwin"* ]]; then
    echo "Mac OS detected"

    if [[ ${install_everything} == true ]]; then
        # install xcode basics
        echo "Installing xcode basics. Gotta get those basics"
        xcode-select --install

        # install brew for dope package managing
        echo "Get that sweet sweet brew. A saviour to mac package management"
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    fi

    if [[ (${install_everything} == true) || (${install_programs} == true) ]]; then
        # make sure it is all setup and working
        echo "Making sure everything is hunky dory with brew. Stay safe out there"
        brew doctor

        for package in "${packages_to_install[@]}" 
        do
            echo "Installing ${package}"
            brew install "${package}"
        done

        echo "Installing oh-my-zsh"
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"

        echo "Installing spacemacs #killing it"
        git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d

        echo "Installing vundle for vim package management"
        git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
    else
        echo "Skipping package installation"
    fi
fi

echo "Done installing packages"

if [[ (${install_everything} == true) || (${install_dotfiles} == true) ]]; then
    install_directory=`realpath $install_directory`

    echo "Using home directory: $install_directory"

    echo "Installing dotfiles"

    rsync -av --exclude '*.git*' --exclude '*Config' --exclude '*README.md'  ./ $install_directory

    echo "dotfiles installed to ${install_directory}"

    vim +PluginInstall +qall
    source ~/.zshrc
else
    echo "Skipping dotfile installation"
fi

echo "Goodbye"
